name: Build and Deploy

on:
  release:
    types: [released]
  workflow_dispatch:

env:
  DOWNLOAD_RELEASE_TEMP_PATH: ${{ github.workspace }}/modloader-temp
  MODLOADER_HTML_FILENAME: "Degrees of Lewdity VERSION.html.mod.html"
  I18NMOD_FILENAME: "ModI18N.mod.zip"
  UPLOAD_ARTIFACT_NAME: "ModLoader-Artifact"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Make Directories
        run: |
          mkdir -p "${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/mods"

      - id: getI18NRelease
        name: Download I18N Mod
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "NumberSir/DoL-I18n-Build"
          latest: true
          fileName: "ModI18N.mod.zip"

      - id: getModLoaderRelease
        name: Download ModLoader Build
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "Lyoko-Jeremie/DoLModLoaderBuild"
          latest: true
          fileName: "DoL-ModLoader-*.zip"

      - name: Extract Modloader Build
        run: |
          unzip -q ${{ fromJson(steps.getModLoaderRelease.outputs.downloaded_files)[0] }} -d ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}
          echo ls ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}

      - name: Create Remote Mod Loading env
        run: |
          echo '["mods/${{ env.I18NMOD_FILENAME }}"]' > "${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/modList.json"
          mv "${{ fromJson(steps.getI18NRelease.outputs.downloaded_files)[0] }}" "${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/mods/${{ env.I18NMOD_FILENAME }}"
          echo ls ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/mods

      - name: Construct PWA
        run: |
          cp -r .github/pwa/* ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}
          mv "${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/${{ env.MODLOADER_HTML_FILENAME }}" "${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/index.html"
          echo ls ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}

      - name: Modify HTML
        shell: python3 {0}
        run: |
          with open("${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/index.html", "r+", encoding="utf-8") as index_html_file:
            index_html = index_html_file.read()
            insert_index = index_html.find('<meta charset="UTF-8" />')
            index_html = index_html[:insert_index] + \
                "<link rel=\"manifest\" href=\"manifest.json\">\n" + index_html[insert_index:]
            insert_index = index_html.find('<body>\n\t<div id="init-screen">') + 7
            index_html = index_html[:insert_index] + \
                "    <script>\n" + \
                "        if (typeof navigator.serviceWorker !== 'undefined') {\n" + \
                "            navigator.serviceWorker.register('sw.js')\n" + \
                "        }\n" + \
                "    </script>\n" + index_html[insert_index:]
            index_html_file.seek(0)
            index_html_file.truncate()
            index_html_file.write(index_html)

      - name: Modify manifest.json
        shell: python3 {0}
        run: |
          import json
          with open("${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}/manifest.json", "r+", encoding="utf-8") as manifest_file:
            manifest_json = json.loads(manifest_file.read())
            manifest_json["scope"] = "/${{ github.event.repository.name }}/"
            manifest_json["start_url"] = "/${{ github.event.repository.name }}/"
            manifest_json["shortcuts"][0]["url"] = "/${{ github.event.repository.name }}/"
            manifest_json["icons"][0]["src"] = "/${{ github.event.repository.name }}/icon.png"
            manifest_file.seek(0)
            manifest_file.truncate()
            manifest_file.write(json.dumps(manifest_json, indent=2))

      - name: Check Filelist
        run: |
          echo "filelist: "
          echo ls ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          build_dir: ${{ env.DOWNLOAD_RELEASE_TEMP_PATH }}
          keep_history: false
          target_branch: gh-pages